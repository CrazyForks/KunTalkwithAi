name: Build and Push Docker Image

# 当代码推送到 main 分支时触发
on:
  push:
    branches: [ main ]
  # 如果您希望在创建 release tag 时也触发，可以取消下面几行的注释
  # release:
  #   types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest # 使用 GitHub 提供的最新版 Ubuntu 运行器

    permissions: # 如果要推送到 GHCR (GitHub Container Registry)，需要这些权限
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # 检出您的代码

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # 设置 Docker Buildx

      # 登录到 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # 使用您刚配置的 secret
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # 使用您刚配置的 secret

      # (可选) 登录到 GitHub Container Registry (GHCR)
      # 如果您不打算使用 GHCR，可以删除下面这个 "Log in to GitHub Container Registry" 步骤
      # 以及后面 tags 中 ghcr.io 的部分
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # 您的 GitHub 用户名或组织名
          password: ${{ secrets.GITHUB_TOKEN }} # 使用 GitHub 自动生成的 GITHUB_TOKEN

      # 构建并推送 Docker 镜像
      - name: Build and push Docker image
        id: build-and-push # 给这个步骤一个 id，方便后续引用其输出
        uses: docker/build-push-action@v5
        with:
          context: . # Dockerfile 所在的上下文路径 (通常是项目根目录)
          file: ./Dockerfile # Dockerfile 的路径
          push: true # 确认要推送镜像
          tags: | # 定义镜像的标签，每行一个标签
            kunzzz999/app1_backend:latest
            kunzzz999/app1_backend:${{ github.sha }} 
            ghcr.io/${{ github.repository_owner }}/kunzzz999:latest
            ghcr.io/${{ github.repository_owner }}/kunzzz999:${{ github.sha }}